version: '3.8'

services:
    # ============================================================
    # SERVICE SCYLLADB
    # ============================================================
    scylladb:
        image: scylladb/scylla:5.2
        container_name: rental-scylladb
        restart: unless-stopped
        command: --seeds=scylladb --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
        ports:
            - "9042:9042"
            - "9160:9160"
            - "10000:10000"
        volumes:
            - scylla_data:/var/lib/scylla
            - ./scripts/init-keyspace.cql:/opt/init-keyspace.cql
        environment:
            - SCYLLA_CLUSTER_NAME=rental-cluster
            - SCYLLA_DC=datacenter1
            - SCYLLA_RACK=rack1
        healthcheck:
            test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES'"]
            interval: 30s
            timeout: 10s
            retries: 10
            start_period: 60s
        networks:
            - rental-network

    # ============================================================
    # SERVICE INIT SCYLLA (pour créer le keyspace)
    # ============================================================
    scylla-init:
        image: scylladb/scylla:5.2
        container_name: rental-scylla-init
        depends_on:
            scylladb:
                condition: service_healthy
        volumes:
            - ./scripts/init-keyspace.cql:/init-keyspace.cql
        command: >
            sh -c "
              echo 'Attente de ScyllaDB...' &&
              sleep 10 &&
              echo 'Création du keyspace rental...' &&
              cqlsh scylladb -f /init-keyspace.cql &&
              echo 'Keyspace créé avec succès!'
            "
        networks:
            - rental-network
        restart: "no"

    # ============================================================
    # SERVICE APPLICATION SPRING BOOT (optionnel)
    # ============================================================
    rental-api:
        build: .
        container_name: rental-api-app
        depends_on:
            scylla-init:
                condition: service_completed_successfully
        ports:
            - "8080:8080"
        environment:
            - SPRING_CASSANDRA_CONTACT_POINTS=scylladb
            - SPRING_CASSANDRA_PORT=9042
            - SPRING_CASSANDRA_KEYSPACE_NAME=rental
            - SPRING_CASSANDRA_LOCAL_DATACENTER=datacenter1
            - SPRING_CASSANDRA_USERNAME=cassandra
            - SPRING_CASSANDRA_PASSWORD=cassandra
            - JAVA_OPTS=-Xms256m -Xmx512m
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 90s
        networks:
            - rental-network
        restart: unless-stopped

# ============================================================
# VOLUMES ET RÉSEAUX
# ============================================================
volumes:
    scylla_data:
        driver: local

networks:
    rental-network:
        driver: bridge
